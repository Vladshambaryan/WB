name: Python autotests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: choose tests set
        required: true
        type: choice
        default: smoke
        options:
          - smoke
          - regression
          - extended
          - all

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  ALLURE_VERSION: 2.30.0

jobs:
  run-tests:
    runs-on: ubuntu-latest
    name: Run autotests
    steps:
      - name: Checkout autotests
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install Playwright
        run: playwright install

      - name: Install Playwright dependencies
        run: playwright install-deps

      - name: Run all tests
        if: github.event.inputs.deployment_target == 'all'
        run: pytest --alluredir=allure-results
        continue-on-error: true

      - name: Run smoke tests
        if: github.event.inputs.deployment_target == 'smoke'
        run: pytest -m smoke --alluredir=allure-results
        continue-on-error: true

      - name: Run regression tests
        if: github.event.inputs.deployment_target == 'regression'
        run: pytest -m regression --alluredir=allure-results
        continue-on-error: true

      - name: Run extended tests
        if: github.event.inputs.deployment_target == 'extended'
        run: pytest -m extended --alluredir=allure-results
        continue-on-error: true

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: Install Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/${{ env.ALLURE_VERSION }}/allure-${{ env.ALLURE_VERSION }}.tgz
          sudo tar -zxvf allure-${{ env.ALLURE_VERSION }}.tgz -C /opt/
          sudo ln -s /opt/allure-${{ env.ALLURE_VERSION }}/bin/allure /usr/bin/allure

      - name: Check if any tests were executed
        run: |
          if grep -r "collected 0 items" allure-results; then
            echo "❌ No tests were collected. Failing job..."
            exit 1
          else
            echo "✔️ Some tests were collected and run."
          fi

      - name: Generate report
        run: allure generate -c allure-results -o _site

      - name: Save allure report
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    name: Report publication
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9

      - name: Add link to summary
        run: |
          echo "✅ [Посмотреть Allure-отчёт](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)" >> $GITHUB_STEP_SUMMARY
